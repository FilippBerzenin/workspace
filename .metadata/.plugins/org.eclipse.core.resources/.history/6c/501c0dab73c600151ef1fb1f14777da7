package lesson_4;

import java.util.Arrays;

public class frame_4_12 {

	static String [][] name = new String [][] 
			{{"Ivanov", "Sergey"}, {"Petrov", "Andrey"}, {"Sinica", "Anna"}, {"Ivanov", "Petr"},
			{"Berzenin", "Filipp"}, {"Yakimenko", "Maksim"}, {"Yakimenka", "Maks"}}; 
	static String [][] subject = new String [][] 
			{{"Matimatika", "12"}, {"English", "10"}, {"Computer science", "12"}, {"Geography", "8"}};
	static String [] rating  = new String [] 
			{"1", "2", "3", "4", "5"};
	
	static String pupilSurname = "Yakimenka";
	static String pupilName = "Maks";

	
		public static void main(String[] args) throws Exception {
			
//		cartulary(name, subject, rating, indexName(name));
			
//		printStatisticForOne(indexName(name),  String [][][] cartulary);
		
//		printStatisticForAll(indexName(name), cartulary(name, subject, rating, indexName(name)));
		
		printStatisticBadRatingForOne(indexName(name), cartulary(name, subject, rating, indexName(name)));
		
	//	System.out.println(name.length);
		
		}
		
		static void printStatisticBadRatingForOne (String [][] indexName, String [][][] cartulary) {
			String index = nameRating (pupilSurname, pupilName, indexName(name));
			int i = new Integer(index)-1;
			System.out.println(indexName[i][0]+" "+indexName[i][1]);
			int x = 0;
			for (int k = 1; k<subject.length+1; k++) {
				System.out.println(Arrays.toString(cartulary[i][k]));
					for (int g = 1; g<cartulary[i][k].length; g++) {
						if (cartulary[i][k][g].equals("1") || cartulary[i][k][g].equals("2")) {
						x =x+1;
						}
					}
					System.out.println("have "+x+" bad rating");
					x = 0;
				}
		}
		
	
			static void printStatisticForAll (String [][] indexName, String [][][] cartulary) throws Exception {
			for (int i=0;i<indexName.length;i++) {
				System.out.println(indexName[i][0]+" "+indexName[i][1]);
				for (int k = 1; k<subject.length+1; k++) {
					System.out.println(Arrays.toString(cartulary[i][k]));
				}
			System.out.println();
			}
		}
		
		
		static void printStatisticForOne (String [][] indexName, String [][][] cartulary) throws Exception {
			String index = nameRating (pupilSurname, pupilName, indexName(name));
			int i = new Integer(index)-1;
			System.out.println(indexName[i][0]+" "+indexName[i][1]);
			for (int k = 1; k<subject.length+1; k++) {
			System.out.println(Arrays.toString(cartulary[i][k]));
			}
		}
	
		static String nameRating (String pupilSurname, String pupilName, String [][] indexName) {
			if (error(name, subject, rating)==true) {
			String indexPupil = null;
			for (int i = 0; i<indexName.length; i++) {
				if (indexName[i][0].equals(pupilSurname)==true && indexName[i][1].equals(pupilName)==true ) {
					indexPupil = indexName[i][2];
				}
			} System.out.print(indexPupil+". "); 
			return indexPupil;}
			return null;
		}
		
		public static String[][][] cartulary (String[][] name, String [][] subject, String [] rating, String [][] indexName) throws Exception {
			if (error(name, subject, rating)==true) {
			String [][][] cartulary = new String [name.length][subject.length+1][lengthHours(subject)]; // для начала устанавливаем максимальное значение.
			cartulary[0][0] = new String[1]; // для поля индекса имен, достаточно одной ячейки.
			hoursLength(cartulary);
			for (int i = 0; i<indexName.length; i++) {
				cartulary[i][0][0] = indexName[i][2];
				for (int k = 1, j = 0;k<subject.length+1; k++, j++) {
					cartulary[i][k][0] = subject[k-1][0]; 
				}
			} 
			RatingFill(cartulary);
			return cartulary;
			}
			System.out.println("Error of data");
			return null;
		}
		
		static boolean error (String[][] name, String [][] subject, String [] rating) {
			int bool = 0;
			if (name != null && subject != null && rating != null) {
				bool = 1;
			}
			for (int i = 0; i<name.length-1; i++) {
				for (int k = 1;k<name[k].length; k++) {
					if (name[k].length!=1) {
						bool = 0;
						break;
					}
				}
			}

//			for (int i = 0; i<subject.length-1; i++) {
//					for (int k = 1;k<subject[k].length; k++) {
//						if (subject[k].length!=1) {
//							bool = 0;
//							break;
//						}
//					}
//			}
//			if (rating.length == 4) {
//				bool = 1;
//				}
			if (bool == 1) {
				return true;
				}
			else if (bool == 0) {
				return false;
				}
			return false;
		}
		
		
		
		static void RatingFill (String [][][] cartulary) throws Exception { // заполнение ячеек с оценками рандомное. Работает, но не так как надо. При каждом обращении к методу к основному методу cartulary, массив строиться заново, а это на мой взглд не корректно. 
			for (int g = 0; g<name.length; g++) {
				for (int k = 1; k<cartulary[0].length; k++) {
					for (int i = 1; i<cartulary[0][k].length; i++) {
					cartulary[g][k][i] = randomRating(rating);
					Thread.sleep(7);
					}
				}
			}		
		}
			
//		static void RatingFill (String [][][] cartulary) {
//			for (int g = 0; g<name.length; g++) {
//				for (int k = 1; k<cartulary[0].length; k++) {
//					for (int i = 1; i<cartulary[0][k].length; i++) {
//						if ( i == 1 ) {
//						cartulary[g][k][i] = "1";
//							}
//						if ( i == 2) {
//						cartulary[g][k][i] = "2";
//							}
//						if (i == 3) {
//							cartulary[g][k][i] = "3";
//							}
//						if ( i == 4) {
//							cartulary[g][k][i] = "4";
//							}
//						if ( i > 4) {
//							cartulary[g][k][i] = "5";
//							}
//						}	
//					}
//				}
//			}
		
		static String randomRating (String [] rating) {
			long timeRandom = System.currentTimeMillis();
			String timeRandomString = String.valueOf(timeRandom);
			for (int i = 1; i<lengthHours(subject); i++) {
				String toRating = timeRandomString.substring(timeRandomString.length()-i);
				int rating1 = (Integer.parseInt(toRating));
				String rezult = null;
				if (rating1>=0 && rating1<2) {
					rezult = rating[0];
				}
				if (rating1>=2 && rating1<3) {
					rezult = rating[1];
				}
				if (rating1>=3 && rating1<5) {
					rezult = rating[2];
				}
				if (rating1>=5 && rating1<7) {
					rezult = rating[3];
				}
				if (rating1>=7 && rating1<=9) {
					rezult = rating[4];
				}
				return rezult;
			}
			return "-1";
		}
		
		static void hoursLength (String [][][] cartulary) {
			for (int i = 0;i<name.length; i++) {
				for (int k = 0, j = 1; k<subject.length; k++, j++) {
					int length = new Integer(subject[k][1]);
					cartulary[i][j] = new String [length+1];
					if(i>name.length || k>subject.length) {
						break;
					}
				// плюс один для названия предмета.
				}
			}
		}
			
		static String [][] indexName (String[][] name) {
			if (error(name, subject, rating)==true) {
			String [][] indexName = new String [name.length][name[0].length+1];
			for (int i = 0; i<name.length; i++) {
				indexName[i][0] = name[i][0];}
			for (int k = 0; k<name.length; k++) {
				indexName[k][1] = name[k][1];}
			for (int g = 0; g<name.length; g++) {
				indexName[g][2] = Integer.toString(g+1);}
			return indexName;
			}
			return null;
		}
			
		static int lengthHours (String [][] subject) {
			int [] maxlengthHours = new int [subject.length]; 
			for (int i = 0; i<subject.length; i++) {
				maxlengthHours[i] = new Integer (subject[i][1]);
			}
				for (int i = 0; i<maxlengthHours.length-1; i++) {
					if (maxlengthHours[i]<maxlengthHours[i+1]) {
						int mem = maxlengthHours[i];
						maxlengthHours[i] = maxlengthHours[i+1];
						maxlengthHours[i+1] = mem;
					}
				} 
				int maxHours = maxlengthHours[0];
				return maxHours;
				}
			

}
