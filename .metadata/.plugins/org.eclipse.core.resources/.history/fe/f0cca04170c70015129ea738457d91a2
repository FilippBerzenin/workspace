package lesson_4;

import java.util.Arrays;

public class birds {
	
	static String[] typeBirds = new String [] {"eagle", "duck"};
	
	static String[][] priceBirds = new String [][] {{"eagle", "5"}, {"duck", "2"}};

	public static void main(String[] args) {
	
				
		stock(arrayPrice(typeBirds, priceBirds));
		
		int [] bayBirdsEagle = new int [] {
			5,
			2,
			3
			};
		
		int [] sellBirdsEagle = new int [] {
			2,
			5,
			2
		};

		int [] bayBirdsDuck = new int [] {
				10,
				15,
				7
				};
			
		int [] sellBirdsDuck = new int [] {
				7,
				18,
				7
			};
		
		stockAll(bayBirdsEagle, sellBirdsEagle);
		stockDuck(bayBirdsDuck, sellBirdsDuck);
	}
	
	static String[][][] stockAll (int []  bayBirdsEagle, int [] sellBirdsEagle) {
		String [][][] stockAll = new String [typeBirds.length][bayBirdsEagle.length][9];
		
		arrayFill(stockAll);
		
//		arrayFillBay (stockEagle, bayBirdsEagle);
		
//			for (int i = 0;i<bayBirdsEagle.length; i++) {
//				stockEagle[i][4] = Integer.toString(bayBirdsEagle[i]);
//			}
//			for (int i = 0 ; i<sellBirdsEagle.length; i++) {
//				stockEagle[i][6] = Integer.toString(sellBirdsEagle[i]);
//	
//			}
//			for (int i = 0;i<bayBirdsEagle.length; i++) {
//				if (i == 0) {
//					stockEagle[i][2] = "0";
//					stockEagle[i][8] = Integer.toString(bayBirdsEagle[i]-sellBirdsEagle[i]);
//				}
//				else 
//					stockEagle[i][2] = stockEagle[i-1][8];
//					stockEagle[i][8] = Integer.toString((bayBirdsEagle[i])-sellBirdsEagle[i]+new Integer(stockEagle[i][2]));
//					if (stockError(stockEagle[i]) == false) {
//						enoughProblem(stockEagle[i]); 
//						System.out.println("Boss, we have a problem! We dont have enough eagles");
//						System.exit(0);
//					}
					System.out.println(Arrays.toString(stockAll[1][0]));
//			}
			
		return stockAll;
	}
	
	static void arrayFill(String [][][] stock) {
		for (int f = 0; f<typeBirds.length; f++) {
			stock[f][0][0] = typeBirds[f];
			for (int i = 0; i<stock.length; i++) {
				stock[f][i][0] = typeBirds[f];
				stock[f][i][1] = "Stock was:";
				stock[f][i][2] = null;
				stock[f][i][3] = "birds in:";
				stock[f][i][4] = null;
				stock[f][i][5] = "birds out:";
				stock[f][i][6] = null;
				stock[f][i][7] = "Stock became";
				stock[f][i][8] = null;
			}
		}
	}
	
	static String[][] stockDuck (int []  bayBirdsDuck, int [] sellBirdsDuck) {
		String [][] stockDuck = new String [bayBirdsDuck.length][9];
			for (int i = 0; i<stockDuck.length; i++) {
			stockDuck[i][0] = "Duck";
			stockDuck[i][1] = "Stock was:";
			stockDuck[i][2] = null;
			stockDuck[i][3] = "birds in:";
			stockDuck[i][4] = null;
			stockDuck[i][5] = "birds out:";
			stockDuck[i][6] = null;
			stockDuck[i][7] = "Stock became";
			stockDuck[i][8] = null;
		}
			for (int i = 0;i<bayBirdsDuck.length; i++) {
				stockDuck[i][4] = Integer.toString(bayBirdsDuck[i]);
			}
			for (int i = 0 ; i<sellBirdsDuck.length; i++) {
				stockDuck[i][6] = Integer.toString(sellBirdsDuck[i]);
			}
			for (int i = 0;i<bayBirdsDuck.length; i++) {
				if (i == 0) {
					stockDuck[i][2] = "0";
					stockDuck[i][8] = Integer.toString(bayBirdsDuck[i]-sellBirdsDuck[i]);
				}
				else 
					stockDuck[i][2] = stockDuck[i-1][8];
					stockDuck[i][8] = Integer.toString((bayBirdsDuck[i])-sellBirdsDuck[i]+new Integer(stockDuck[i][2]));
				if (stockError(stockDuck[i]) == false) {
						enoughProblem(stockDuck[i]); 

					}
//					System.out.println(Arrays.toString(stockDuck[i]));
			}
			
		return stockDuck;
	}
		
		static boolean stockError (String[] stock) {
			for  (int i = 0;i<stock.length; i++) {
				if (stock[i]==null) {
					stock[i] = "0";
				}
			}
			if ((new Integer(stock[2])+new Integer(stock[4]))<new Integer(stock[6])) {
				return false;}
				return true;
			
		}

		static String enoughProblem(String [] stockProblem) {
			System.out.println(Arrays.toString(stockProblem));
			System.out.println("Boss, we have a problem! We dont have enough " + stockProblem[0]);
			int weHave = new Integer(stockProblem[2])+new Integer(stockProblem[4]);
			System.out.println("We can sell only "+ weHave + " " + stockProblem[0]);
			System.exit(0);
			return null;
			
		}
	
		static String[][][] stock (String[][] arrayPrice) {
			String [][][] stock = new String [arrayPrice.length][4][0];

			for (int i = 0; i<arrayPrice[0].length-1; i++) {
				stock[i][0] = new String [1];
				stock[i][0][0] = arrayPrice[i][0];
				for (int k = 1; k<arrayPrice[0].length; k++) {
					stock[i][k] = new String [7];
					stock[i][k][0] = arrayPrice[i][1];
					stock[i][k][1] = "Stock now";
					stock[i][k][2] = null;
					stock[i][k][3] = "birds in";
					stock[i][k][4] = null;
					stock[i][k][5] = "birds out";
					stock[i][k][6] = null;
				}
			}
			for (int i =0;i<arrayPrice[0].length-1; i++) {
				stock[i][2] = new String [4]; // при условии введения себестоимости закупки длину поля нужна увеличить.
				stock[i][2][0] = "priceFoSell";
				stock[i][2][2] = "priceFoBay";
				stock[i][2][1] = arrayPrice[i][2];
			}
			stock[0][3] = new String [2]; // одно значение входящие
//			System.out.println(Arrays.toString(stock[0][1]));
//			System.out.println(Arrays.toString(stock[1][2]));
//			System.out.println(stock[0][0][0]);
			return stock;
		}
		
		static String[][] arrayPrice (String[] typeBirds, String[][] priceBirds) {
			String [][] arrayPrice = new String [typeBirds.length][3];
			for (int i = 0; i<typeBirds.length; i++) {
				arrayPrice[i][0] = Integer.toString(i+1);
			}
			for (int i = 0; i<typeBirds.length; i++) {
				arrayPrice[i][1] = typeBirds[i];
			}
			for (int i = 0; i<typeBirds.length; i++) {
				if (priceBirds[i][0].equals(typeBirds[i]))
						arrayPrice[i][2] = priceBirds[i][1];
			}
			return arrayPrice;
			
		}
}
