package lesson_4;

import java.util.Arrays;

public class birds {
	
	static String[] typeBirds = new String [] {"eagle", "duck ", "fenix"};
	
	static String[][] priceBirds = new String [][] {{"eagle", "5"}, {"duck", "2"}};

	public static void main(String[] args) {
	
		int [][] bayBirds = new int [][] { // данные по закупкам
			{5, 2, 3, 4, 5},
			{10, 15, 7, 4, 5},
			{3, 3, 3, 4, 4}
		};
		
		int [][] sellBirds = new int [][] { // данные по продажам 
			{6, 5, 2, 4, 4},
			{7, 18, 7, 4, 4},
			{2, 2, 2, 4, 4}
		};

		baySellAll(bayBirds, sellBirds);
		
		stockAll(baySellAll (bayBirds, sellBirds), bayBirds, sellBirds);

//		StaticticFoSellBirds(stockAll(baySellAll (bayBirds, sellBirds), bayBirds, sellBirds));
	}

//		static void StaticticFoSellBirds (String[][][] stockAll) {
//			for (int i = 0; i<typeBirds.length; i++) {
//				System.out.println(typeBirds[i] + " total sales:");
//				if (typeBirds[i] == stockAll[])
//				for (int k = )
//					if (typeBirds[i] == stockAll[])
//			}
//		}
	
//	static String[][][] stock (String[][] arrayPrice) {
//	String [][][] stock = new String [arrayPrice.length][4][0];
//	System.out.println(Arrays.toString(stock[0][0]));
//	return stock;

//	for (int i = 0; i<arrayPrice[0].length-1; i++) {
//		stock[i][0] = new String [1];
//		stock[i][0][0] = arrayPrice[i][0];
//		for (int k = 1; k<arrayPrice[0].length; k++) {
//			stock[i][k] = new String [7];
//			stock[i][k][0] = arrayPrice[i][1];
//			stock[i][k][1] = "Stock now";
//			stock[i][k][2] = null;
//			stock[i][k][3] = "birds in";
//			stock[i][k][4] = null;
//			stock[i][k][5] = "birds out";
//			stock[i][k][6] = null;
//		}
//	}
//	for (int i =0;i<arrayPrice[0].length-1; i++) {
//		stock[i][2] = new String [4]; // при условии введения себестоимости закупки длину поля нужна увеличить.
//		stock[i][2][0] = "priceFoSell";
//		stock[i][2][2] = "priceFoBay";
//		stock[i][2][1] = arrayPrice[i][2];
//	}
//	stock[0][3] = new String [2]; // одно значение входящие
//	return stock;


static String[][] arrayPrice (String[] typeBirds, String[][] priceBirds) {
	String [][] arrayPrice = new String [typeBirds.length][3];
	for (int i = 0; i<typeBirds.length; i++) {
		arrayPrice[i][0] = Integer.toString(i+1);
	}
	for (int i = 0; i<typeBirds.length; i++) {
		arrayPrice[i][1] = typeBirds[i];
	}
	for (int i = 0; i<typeBirds.length; i++) {
		if (priceBirds[i][0].equals(typeBirds[i]))
				arrayPrice[i][2] = priceBirds[i][1];
	}
	return arrayPrice;
	
}
	
	
	static String [][] baySellAll (int [][]  bayBirds, int [][] sellBirds) {
		int length = length(bayBirds, sellBirds);
		String [][] baySellAll = new String [typeBirds.length*2][length+2]; 
		baySellAllFill (baySellAll, bayBirds, sellBirds, length);
		return baySellAll;
	}
	
	static void baySellAllFill (String [][] baySellAll, int [][]  bayBirds, int [][] sellBirds, int length) {
		for  (int i = 0, k=0; i<baySellAll.length; i+=2, k++) {
			baySellAll[i][0] = typeBirds[k];
			baySellAll[i+1][0] = typeBirds[k];
		}
		for (int i = 0; i<baySellAll.length; i+=2) {
			baySellAll[i][1] = "bay:";
			baySellAll[i+1][1] = "sell:";
		}
		for (int i = 0, j = 0; i<baySellAll.length; i+=2, j++) {
			for (int k = 0; k<length; k++)
			baySellAll[i][k+2] = Integer.toString(bayBirds[j][k]);
		}
		for (int i = 1, j = 0; i<baySellAll.length; i+=2, j++) {
			for (int k = 0; k<length; k++)
			baySellAll[i][k+2] = Integer.toString(sellBirds[j][k]);
		}	
	}
	
	static String[][][] stockAll (String [][] baySellAll, int[][] bayBirds, int[][] sellBirds) {
		String [][][] stockAll = new String [typeBirds.length][5][baySellAll.length];
		
		arrayFill(stockAll);
		
		arrayFillBay (stockAll, baySellAll);
		
		arrayFillSell (stockAll, baySellAll);
		
		arrayFillLeftovers (stockAll, baySellAll, bayBirds, sellBirds);

		return stockAll;
	}
	
	static void arrayFill(String [][][] stock) {
		for (int f = 0; f<typeBirds.length; f++) {
			stock[f][0][0] = typeBirds[f];
			for (int i = 0; i<stock.length; i++) {
				stock[i][1][0] = "Stock was:   ";
				stock[i][2][0] = "birds in:    ";
				stock[i][3][0] = "birds out:   ";
				stock[i][4][0] = "Stock became:";

			}
		}// System.out.println(stock[0][1][0]);
	}
	
	static void arrayFillBay (String[][][] stockAll, String[][] baySellAll) {
		for (int k = 0, j = 0; k<typeBirds.length; k++, j=j+2) {
			for (int i = 0; i<baySellAll[0].length-2; i++) {
				stockAll[k][2][i+1] = baySellAll[j][i+2];
			}
		}
	}
	
	static void arrayFillSell (String[][][] stockAll, String[][] baySellAll) {
		for (int k = 0, j = 1; k<typeBirds.length; k++, j=j+2) {
			for (int i = 0;i<baySellAll[0].length-2; i++) {
				stockAll[k][3][i+1] = baySellAll[j][i+2];
			}
		}
	}
	
	static void arrayFillLeftovers (String[][][] stockAll, String[][] baySellAll, int[][] bayBirds, int[][] sellBirds) {
		int length = length(bayBirds, sellBirds);
		for (int k = 0;k<typeBirds.length; k++) {
			for (int i = 1;i<length+1; i++) {
				if (i == 1) {
					stockAll[k][1][i] = "0";
					stockAll[k][4][i] = Integer.toString((new Integer(stockAll[k][2][i])-
							new Integer(stockAll[k][3][i])));
				}
				else {
					stockAll[k][1][i] = stockAll[k][4][i-1];
					stockAll[k][4][i] = Integer.toString(new Integer(stockAll[k][1][i])+new Integer(stockAll[k][2][i])-
							new Integer(stockAll[k][3][i]));
				
					if (stockError(stockAll[k][4][i]) == false) {
						System.out.println(Arrays.toString(stockAll[k][1]));
						enoughProblem(stockAll[k][1]); 
						System.out.println("Boss, we have a problem! We dont have enough eagles");
						System.exit(0);
					}
				}
			}
		}

		System.out.println(Arrays.toString(stockAll[0][1]));
		System.out.println(Arrays.toString(stockAll[0][2]));
		System.out.println(Arrays.toString(stockAll[0][3]));
		System.out.println(Arrays.toString(stockAll[0][4]));

	}
	
	static boolean stockError (String[] stock) {
			if ((new Integer(stock[0])<0)) {
				return false;}
				return true;
			
		}

		static String enoughProblem(String [] stockProblem) {
			System.out.println(Arrays.toString(stockProblem));
			System.out.println("Boss, we have a problem! We dont have enough " + stockProblem[0]);
			int weHave = new Integer(stockProblem[1])+new Integer(stockProblem[2]);
			System.out.println("We can sell only "+ weHave + " " + stockProblem[0]);
			System.exit(0);
			return null;
			
		}
		static int length(int[][] bayBirds, int[][] sellBirds) {
			int rezult = 0;
			int bayBirdsE = bayBirds[0].length;
			int bayBirdsD = bayBirds[1].length;
			int sellBirdsE = sellBirds[0].length;
			int sellBirdsD = sellBirds[1].length;
			if (bayBirdsE>=bayBirdsD) {
				rezult = bayBirdsE;
			}
			else rezult = bayBirdsD;
			if (rezult>=sellBirdsE) {
				rezult = rezult;
			} else rezult =sellBirdsE;
			if (rezult>=sellBirdsD) {
				rezult = rezult;
			} else rezult =sellBirdsD;
				return rezult;
		}

}
